{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  class: \"map\",\n  ref: \"map\"\n};\nconst _hoisted_3 = {\n  class: \"controls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, null, 512 /* NEED_PATCH */), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startId = $event),\n    placeholder: \"Enter start node ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startId]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.goalId = $event),\n    placeholder: \"Enter goal node ID\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.goalId]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.findShortestPath && $options.findShortestPath(...args))\n  }, \"Find Shortest Path\")])]);\n}","map":{"version":3,"names":["class","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","type","_cache","$event","$data","startId","placeholder","goalId","onClick","args","$options","findShortestPath"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapview.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <div class=\"map\" ref=\"map\"></div>\r\n    <div class=\"controls\">\r\n      <input type=\"text\" v-model=\"startId\" placeholder=\"Enter start node ID\">\r\n      <input type=\"text\" v-model=\"goalId\" placeholder=\"Enter goal node ID\">\r\n      <button @click=\"findShortestPath\">Find Shortest Path</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      startId: '',\r\n      goalId: '',\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      // Initialize the map\r\n      this.map = L.map(this.$refs.map).setView([0, 0], 1);\r\n\r\n      // Add a tile layer (e.g., OpenStreetMap)\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n        maxZoom: 18,\r\n      }).addTo(this.map);\r\n    },\r\n    async findShortestPath() {\r\n      try {\r\n        const response = await axios.post('/shortest_path', {\r\n          startId: this.startId,\r\n          goalId: this.goalId,\r\n        });\r\n\r\n        // Clear previous path if any\r\n        if (this.pathLayer) {\r\n          this.map.removeLayer(this.pathLayer);\r\n        }\r\n\r\n        // Extract the path from the response\r\n        const path = response.data.path;\r\n\r\n        // Draw the path on the map\r\n        this.pathLayer = L.polyline(path.map(node => [node.lat, node.lon])).addTo(this.map);\r\n\r\n        // Fit the map bounds to the path\r\n        this.map.fitBounds(this.pathLayer.getBounds());\r\n      } catch (error) {\r\n        console.error('Error finding shortest path:', error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.map-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.map {\r\n  flex: 1;\r\n}\r\n\r\n.controls {\r\n  padding: 10px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC,KAAK;EAACC,GAAG,EAAC;;;EAChBD,KAAK,EAAC;AAAU;;uBAFvBE,mBAAA,CAOM,OAPNC,UAOM,GANJC,mBAAA,CAAiC,OAAjCC,UAAiC,+BACjCD,mBAAA,CAIM,OAJNE,UAIM,G,gBAHJF,mBAAA,CAAuE;IAAhEG,IAAI,EAAC,MAAM;IAJxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIkCC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAArBF,KAAA,CAAAC,OAAO,E,mBACnCP,mBAAA,CAAqE;IAA9DG,IAAI,EAAC,MAAM;IALxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKkCC,KAAA,CAAAG,MAAM,GAAAJ,MAAA;IAAEG,WAAW,EAAC;iDAApBF,KAAA,CAAAG,MAAM,E,GAClCT,mBAAA,CAA6D;IAApDU,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;KAAE,oBAAkB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}