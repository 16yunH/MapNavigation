{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { ElMessage } from 'element-plus';\nimport 'element-plus/dist/index.css';\nexport default {\n  name: 'OsmMap',\n  data() {\n    return {\n      map: null,\n      startPoint: '',\n      endPoint: '',\n      startMarker: null,\n      endMarker: null,\n      routePath: null,\n      // 扩展地点数据，包含更多信息\n      locations: [{\n        value: '松江大学城',\n        nodeId: 2845789961,\n        location: [31.500000, 121.750000]\n      }, {\n        value: '松江南站',\n        nodeId: 946031310,\n        location: [31.510000, 121.760000]\n      },\n      // 可以添加更多地点\n      {\n        value: '泗泾镇',\n        nodeId: 123456789,\n        location: [31.520000, 121.770000]\n      }, {\n        value: '松江体育中心',\n        nodeId: 987654321,\n        location: [31.530000, 121.780000]\n      }, {\n        value: '松江大学城地铁站',\n        nodeId: 456789123,\n        location: [31.540000, 121.790000]\n      }],\n      selectedStartLocation: null,\n      // 存储选中的起点位置\n      selectedEndLocation: null // 存储选中的终点位置\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    // 初始化地图的方法保持不变\n    initMap() {\n      // ... 保持原有的地图初始化代码\n    },\n    // 搜索建议的实现\n    querySearch(queryString, callback) {\n      // 如果输入为空，返回所有选项\n      if (queryString === '') {\n        callback(this.locations);\n        return;\n      }\n\n      // 根据输入过滤地点\n      const results = this.locations.filter(location => location.value.toLowerCase().includes(queryString.toLowerCase()));\n\n      // 返回过滤后的结果\n      callback(results);\n    },\n    // 处理起点选择\n    handleStartSelect(item) {\n      this.selectedStartLocation = item;\n      // 如果有之前的起点标记，先移除\n      if (this.startMarker) {\n        this.map.removeLayer(this.startMarker);\n      }\n      // 在地图上添加新的起点标记\n      this.startMarker = L.marker(item.location).addTo(this.map).bindPopup('起点：' + item.value).openPopup();\n      // 调整地图视野\n      this.map.setView(item.location, 15);\n    },\n    // 处理终点选择\n    handleEndSelect(item) {\n      this.selectedEndLocation = item;\n      // 如果有之前的终点标记，先移除\n      if (this.endMarker) {\n        this.map.removeLayer(this.endMarker);\n      }\n      // 在地图上添加新的终点标记\n      this.endMarker = L.marker(item.location).addTo(this.map).bindPopup('终点：' + item.value).openPopup();\n      // 调整地图视野\n      this.map.setView(item.location, 15);\n    },\n    // 修改后的路径搜索方法\n    async searchRoute() {\n      try {\n        // 检查是否已选择起点和终点\n        if (!this.selectedStartLocation || !this.selectedEndLocation) {\n          ElMessage.warning('请从提示列表中选择起点和终点');\n          return;\n        }\n\n        // 使用选中位置的 nodeId 发送请求\n        const response = await fetch('http://localhost:18080/route', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            start_id: this.selectedStartLocation.nodeId,\n            end_id: this.selectedEndLocation.nodeId\n          })\n        });\n\n        // ... 后续的路径处理代码保持不变\n      } catch (error) {\n        console.error('Error:', error);\n        ElMessage.error('查找路径时出错，请重试');\n      }\n    },\n    clearMap() {\n      // ... 保持原有的清除地图方法\n    }\n  }\n};","map":{"version":3,"names":["L","ElMessage","name","data","map","startPoint","endPoint","startMarker","endMarker","routePath","locations","value","nodeId","location","selectedStartLocation","selectedEndLocation","mounted","initMap","methods","querySearch","queryString","callback","results","filter","toLowerCase","includes","handleStartSelect","item","removeLayer","marker","addTo","bindPopup","openPopup","setView","handleEndSelect","searchRoute","warning","response","fetch","method","headers","body","JSON","stringify","start_id","end_id","error","console","clearMap"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapview.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <div class=\"search-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"9\">\r\n          <!-- 使用 AutoComplete 组件替换原来的 Input 组件 -->\r\n          <el-autocomplete\r\n              v-model=\"startPoint\"\r\n              :fetch-suggestions=\"querySearch\"\r\n              placeholder=\"请输入起点\"\r\n              clearable\r\n              @select=\"handleStartSelect\"\r\n              class=\"full-width\"\r\n          />\r\n        </el-col>\r\n        <el-col :span=\"9\">\r\n          <el-autocomplete\r\n              v-model=\"endPoint\"\r\n              :fetch-suggestions=\"querySearch\"\r\n              placeholder=\"请输入终点\"\r\n              clearable\r\n              @select=\"handleEndSelect\"\r\n              class=\"full-width\"\r\n          />\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"primary\" @click=\"searchRoute\">查找路线</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n    <div id=\"map\" class=\"map-view\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { ElMessage } from 'element-plus'\r\nimport 'element-plus/dist/index.css'\r\n\r\nexport default {\r\n  name: 'OsmMap',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      startPoint: '',\r\n      endPoint: '',\r\n      startMarker: null,\r\n      endMarker: null,\r\n      routePath: null,\r\n      // 扩展地点数据，包含更多信息\r\n      locations: [\r\n        { value: '松江大学城', nodeId: 2845789961, location: [31.500000, 121.750000] },\r\n        { value: '松江南站', nodeId: 946031310, location: [31.510000, 121.760000] },\r\n        // 可以添加更多地点\r\n        { value: '泗泾镇', nodeId: 123456789, location: [31.520000, 121.770000] },\r\n        { value: '松江体育中心', nodeId: 987654321, location: [31.530000, 121.780000] },\r\n        { value: '松江大学城地铁站', nodeId: 456789123, location: [31.540000, 121.790000] }\r\n      ],\r\n      selectedStartLocation: null,  // 存储选中的起点位置\r\n      selectedEndLocation: null     // 存储选中的终点位置\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    // 初始化地图的方法保持不变\r\n    initMap() {\r\n      // ... 保持原有的地图初始化代码\r\n    },\r\n\r\n    // 搜索建议的实现\r\n    querySearch(queryString, callback) {\r\n      // 如果输入为空，返回所有选项\r\n      if (queryString === '') {\r\n        callback(this.locations);\r\n        return;\r\n      }\r\n\r\n      // 根据输入过滤地点\r\n      const results = this.locations.filter(location =>\r\n          location.value.toLowerCase().includes(queryString.toLowerCase())\r\n      );\r\n\r\n      // 返回过滤后的结果\r\n      callback(results);\r\n    },\r\n\r\n    // 处理起点选择\r\n    handleStartSelect(item) {\r\n      this.selectedStartLocation = item;\r\n      // 如果有之前的起点标记，先移除\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n      // 在地图上添加新的起点标记\r\n      this.startMarker = L.marker(item.location)\r\n          .addTo(this.map)\r\n          .bindPopup('起点：' + item.value)\r\n          .openPopup();\r\n      // 调整地图视野\r\n      this.map.setView(item.location, 15);\r\n    },\r\n\r\n    // 处理终点选择\r\n    handleEndSelect(item) {\r\n      this.selectedEndLocation = item;\r\n      // 如果有之前的终点标记，先移除\r\n      if (this.endMarker) {\r\n        this.map.removeLayer(this.endMarker);\r\n      }\r\n      // 在地图上添加新的终点标记\r\n      this.endMarker = L.marker(item.location)\r\n          .addTo(this.map)\r\n          .bindPopup('终点：' + item.value)\r\n          .openPopup();\r\n      // 调整地图视野\r\n      this.map.setView(item.location, 15);\r\n    },\r\n\r\n    // 修改后的路径搜索方法\r\n    async searchRoute() {\r\n      try {\r\n        // 检查是否已选择起点和终点\r\n        if (!this.selectedStartLocation || !this.selectedEndLocation) {\r\n          ElMessage.warning('请从提示列表中选择起点和终点');\r\n          return;\r\n        }\r\n\r\n        // 使用选中位置的 nodeId 发送请求\r\n        const response = await fetch('http://localhost:18080/route', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            start_id: this.selectedStartLocation.nodeId,\r\n            end_id: this.selectedEndLocation.nodeId\r\n          })\r\n        });\r\n\r\n        // ... 后续的路径处理代码保持不变\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        ElMessage.error('查找路径时出错，请重试');\r\n      }\r\n    },\r\n\r\n    clearMap() {\r\n      // ... 保持原有的清除地图方法\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 添加一些新的样式 */\r\n.full-width {\r\n  width: 100%;\r\n}\r\n\r\n.el-autocomplete-suggestion {\r\n  z-index: 9999 !important;\r\n}\r\n\r\n/* 保持原有的其他样式 */\r\n.map-container {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n}\r\n\r\n.map-view {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.search-container {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n  width: 80%;\r\n  max-width: 800px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .search-container {\r\n    width: 90%;\r\n    padding: 15px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}