{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_col = _resolveComponent(\"el-col\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_row = _resolveComponent(\"el-row\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 搜索控件容器 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_row, {\n    gutter: 20\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_col, {\n      span: 9\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.startPoint,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startPoint = $event),\n        placeholder: \"请输入起点ID\",\n        clearable: \"\",\n        class: \"full-width\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 9\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $data.endPoint,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.endPoint = $event),\n        placeholder: \"请输入终点ID\",\n        clearable: \"\",\n        class: \"full-width\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_col, {\n      span: 6\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $options.searchRoute\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"查找路线\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" 地图容器 \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    id: \"map\",\n    class: \"map-view\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_el_row","gutter","default","_withCtx","_component_el_col","span","_component_el_input","modelValue","$data","startPoint","_cache","$event","placeholder","clearable","_","endPoint","_component_el_button","type","onClick","$options","searchRoute","_createTextVNode","id"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapview.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <!-- 搜索控件容器 -->\r\n    <div class=\"search-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"9\">\r\n          <el-input\r\n              v-model=\"startPoint\"\r\n              placeholder=\"请输入起点ID\"\r\n              clearable\r\n              class=\"full-width\"\r\n          />\r\n        </el-col>\r\n        <el-col :span=\"9\">\r\n          <el-input\r\n              v-model=\"endPoint\"\r\n              placeholder=\"请输入终点ID\"\r\n              clearable\r\n              class=\"full-width\"\r\n          />\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"primary\" @click=\"searchRoute\">查找路线</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- 地图容器 -->\r\n    <div id=\"map\" class=\"map-view\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { ElMessage } from 'element-plus';\r\nimport 'element-plus/dist/index.css';\r\n\r\nexport default {\r\n  name: 'MapView',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      startPoint: '',\r\n      endPoint: '',\r\n      startMarker: null,\r\n      endMarker: null,\r\n      routePath: null,\r\n      tileLayer: null,\r\n      bounds: {\r\n        minLat: 28.2817100,\r\n        minLon: 117.1911600,\r\n        maxLat: 28.3225200,\r\n        maxLon: 117.2551900\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      // 计算地图中心点\r\n      const centerLat = (this.bounds.minLat + this.bounds.maxLat) / 2;\r\n      const centerLon = (this.bounds.minLon + this.bounds.maxLon) / 2;\r\n\r\n      // 初始化地图\r\n      this.map = L.map('map', {\r\n        center: [centerLat, centerLon],\r\n        zoom: 15,\r\n        minZoom: 14,\r\n        maxZoom: 18,\r\n        zoomControl: true,\r\n        doubleClickZoom: true,\r\n        scrollWheelZoom: true\r\n      });\r\n\r\n      // 添加 OSM 底图\r\n      this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors',\r\n        maxZoom: 18,\r\n        tileSize: 256\r\n      }).addTo(this.map);\r\n\r\n      // 设置地图边界\r\n      const bounds = L.latLngBounds(\r\n          [this.bounds.minLat, this.bounds.minLon],\r\n          [this.bounds.maxLat, this.bounds.maxLon]\r\n      );\r\n      this.map.setMaxBounds(bounds);\r\n\r\n      // 添加比例尺\r\n      L.control.scale({ imperial: false }).addTo(this.map);\r\n    },\r\n\r\n    async searchRoute() {\r\n      try {\r\n        // 验证输入\r\n        if (!this.startPoint || !this.endPoint) {\r\n          ElMessage.warning('请输入起点和终点ID');\r\n          return;\r\n        }\r\n\r\n        // 发送请求到后端\r\n        const response = await fetch('http://localhost:18080/route', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            start_id: parseInt(this.startPoint),\r\n            end_id: parseInt(this.endPoint)\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('路径查找失败');\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        // 清除现有的路径\r\n        this.clearMap();\r\n\r\n        if (data.path && data.path.length > 0) {\r\n          // 绘制路径线\r\n          this.routePath = L.polyline(data.path, {\r\n            color: '#3388ff',\r\n            weight: 6,\r\n            opacity: 0.8,\r\n            lineJoin: 'round'\r\n          }).addTo(this.map);\r\n\r\n          // 添加起点和终点标记\r\n          this.startMarker = L.marker(data.path[0]).addTo(this.map)\r\n              .bindPopup('起点').openPopup();\r\n          this.endMarker = L.marker(data.path[data.path.length - 1]).addTo(this.map)\r\n              .bindPopup('终点').openPopup();\r\n\r\n          // 调整地图视野以显示完整路径\r\n          this.map.fitBounds(this.routePath.getBounds(), {\r\n            padding: [50, 50]\r\n          });\r\n\r\n          ElMessage.success('路径已显示');\r\n        } else {\r\n          ElMessage.warning('未找到可行路径');\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        ElMessage.error('路径查找失败，请重试');\r\n      }\r\n    },\r\n\r\n    clearMap() {\r\n      if (this.startMarker) this.map.removeLayer(this.startMarker);\r\n      if (this.endMarker) this.map.removeLayer(this.endMarker);\r\n      if (this.routePath) this.map.removeLayer(this.routePath);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.map-container {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n}\r\n\r\n.map-view {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.search-container {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0,0,0,0.1);\r\n  width: 80%;\r\n  max-width: 800px;\r\n}\r\n\r\n.full-width {\r\n  width: 100%;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .search-container {\r\n    width: 90%;\r\n    padding: 15px;\r\n  }\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAkB;;;;;;uBAF/BC,mBAAA,CA4BM,OA5BNC,UA4BM,GA3BJC,mBAAA,YAAe,EACfC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,YAAA,CAoBSC,iBAAA;IApBAC,MAAM,EAAE;EAAE;IAJzBC,OAAA,EAAAC,QAAA,CAKQ,MAOS,CAPTJ,YAAA,CAOSK,iBAAA;MAPAC,IAAI,EAAE;IAAC;MALxBH,OAAA,EAAAC,QAAA,CAMU,MAKE,CALFJ,YAAA,CAKEO,mBAAA;QAXZC,UAAA,EAOuBC,KAAA,CAAAC,UAAU;QAPjC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOuBH,KAAA,CAAAC,UAAU,GAAAE,MAAA;QACnBC,WAAW,EAAC,SAAS;QACrBC,SAAS,EAAT,EAAS;QACTpB,KAAK,EAAC;;MAVpBqB,CAAA;QAaQf,YAAA,CAOSK,iBAAA;MAPAC,IAAI,EAAE;IAAC;MAbxBH,OAAA,EAAAC,QAAA,CAcU,MAKE,CALFJ,YAAA,CAKEO,mBAAA;QAnBZC,UAAA,EAeuBC,KAAA,CAAAO,QAAQ;QAf/B,uBAAAL,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeuBH,KAAA,CAAAO,QAAQ,GAAAJ,MAAA;QACjBC,WAAW,EAAC,SAAS;QACrBC,SAAS,EAAT,EAAS;QACTpB,KAAK,EAAC;;MAlBpBqB,CAAA;QAqBQf,YAAA,CAESK,iBAAA;MAFAC,IAAI,EAAE;IAAC;MArBxBH,OAAA,EAAAC,QAAA,CAsBU,MAA+D,CAA/DJ,YAAA,CAA+DiB,oBAAA;QAApDC,IAAI,EAAC,SAAS;QAAEC,OAAK,EAAEC,QAAA,CAAAC;;QAtB5ClB,OAAA,EAAAC,QAAA,CAsByD,MAAIO,MAAA,QAAAA,MAAA,OAtB7DW,gBAAA,CAsByD,MAAI,E;QAtB7DP,CAAA;;MAAAA,CAAA;;IAAAA,CAAA;QA2BIlB,mBAAA,UAAa,E,0BACbC,mBAAA,CAAqC;IAAhCyB,EAAE,EAAC,KAAK;IAAC7B,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}