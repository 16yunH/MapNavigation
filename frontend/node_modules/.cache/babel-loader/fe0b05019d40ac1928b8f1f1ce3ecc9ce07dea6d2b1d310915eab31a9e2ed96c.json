{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      map: null,\n      pathLayer: null,\n      nodes: {},\n      // 新增的数据属性\n      startPoint: null,\n      endPoint: null,\n      startMarker: null,\n      endMarker: null\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get('http://localhost:8081/nodes');\n      this.nodes = response.data;\n    } catch (error) {\n      console.error('Error fetching nodes:', error);\n    }\n  },\n  mounted() {\n    this.initMap();\n    this.resizeMap();\n    window.addEventListener('resize', this.resizeMap);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.resizeMap);\n  },\n  methods: {\n    initMap() {\n      this.map = L.map(this.$refs.map).fitBounds([[28.2817100, 117.1911600], [28.3225200, 117.2551900]]);\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\n        maxZoom: 18\n      }).addTo(this.map);\n\n      // 添加地图点击事件监听器\n      this.map.on('click', this.handleMapClick);\n    },\n    resizeMap() {\n      this.$nextTick(() => {\n        this.map.invalidateSize();\n      });\n    },\n    // 处理地图点击事件的方法\n    handleMapClick(e) {\n      const latlng = e.latlng;\n      if (!this.startPoint) {\n        // 设置起点\n        this.startPoint = latlng;\n        // 添加起点标记\n        this.startMarker = L.marker(latlng, {\n          icon: L.divIcon({\n            className: 'custom-marker',\n            html: '<div class=\"marker-start\">起点</div>'\n          })\n        }).addTo(this.map);\n      } else if (!this.endPoint) {\n        // 设置终点\n        this.endPoint = latlng;\n        // 添加终点标记\n        this.endMarker = L.marker(latlng, {\n          icon: L.divIcon({\n            className: 'custom-marker',\n            html: '<div class=\"marker-end\">终点</div>'\n          })\n        }).addTo(this.map);\n      }\n    },\n    // 格式化坐标显示\n    formatCoordinate(point) {\n      return `纬度: ${point.lat.toFixed(6)}, 经度: ${point.lng.toFixed(6)}`;\n    },\n    // 重置选择的点\n    resetPoints() {\n      if (this.startMarker) {\n        this.map.removeLayer(this.startMarker);\n      }\n      if (this.endMarker) {\n        this.map.removeLayer(this.endMarker);\n      }\n      if (this.pathLayer) {\n        this.map.removeLayer(this.pathLayer);\n      }\n      this.startPoint = null;\n      this.endPoint = null;\n      this.startMarker = null;\n      this.endMarker = null;\n    },\n    async findShortestPath() {\n      if (!this.startPoint || !this.endPoint) {\n        alert('请先选择起点和终点');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:8081/shortest_path', {\n          startPoint: {\n            lat: this.startPoint.lat,\n            lon: this.startPoint.lng\n          },\n          endPoint: {\n            lat: this.endPoint.lat,\n            lon: this.endPoint.lng\n          }\n        });\n        if (this.pathLayer) {\n          this.map.removeLayer(this.pathLayer);\n        }\n        const path = response.data.path;\n        const coordinates = path.map(nodeId => {\n          const node = this.nodes[nodeId];\n          return [node.lat, node.lon];\n        });\n        this.pathLayer = L.polyline(coordinates, {\n          color: 'blue'\n        }).addTo(this.map);\n        this.map.fitBounds(this.pathLayer.getBounds());\n      } catch (error) {\n        console.error('Error finding shortest path:', error);\n        alert('查找最短路径时发生错误，请查看控制台了解详情。');\n      }\n    }\n  }\n};","map":{"version":3,"names":["L","axios","data","map","pathLayer","nodes","startPoint","endPoint","startMarker","endMarker","created","response","get","error","console","mounted","initMap","resizeMap","window","addEventListener","beforeUnmount","removeEventListener","methods","$refs","fitBounds","tileLayer","attribution","maxZoom","addTo","on","handleMapClick","$nextTick","invalidateSize","e","latlng","marker","icon","divIcon","className","html","formatCoordinate","point","lat","toFixed","lng","resetPoints","removeLayer","findShortestPath","alert","post","lon","path","coordinates","nodeId","node","polyline","color","getBounds"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapView.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <div class=\"controls\">\r\n      <!-- 显示选中的坐标信息 -->\r\n      <div v-if=\"startPoint\" class=\"coordinate-info\">\r\n        起点: {{ formatCoordinate(startPoint) }}\r\n      </div>\r\n      <div v-if=\"endPoint\" class=\"coordinate-info\">\r\n        终点: {{ formatCoordinate(endPoint) }}\r\n      </div>\r\n      <button v-if=\"startPoint && endPoint\" @click=\"findShortestPath\">查找最短路径</button>\r\n      <button @click=\"resetPoints\">重置选择点</button>\r\n    </div>\r\n    <div class=\"map\" ref=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      pathLayer: null,\r\n      nodes: {},\r\n      // 新增的数据属性\r\n      startPoint: null,\r\n      endPoint: null,\r\n      startMarker: null,\r\n      endMarker: null\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('http://localhost:8081/nodes');\r\n      this.nodes = response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching nodes:', error);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    this.resizeMap();\r\n    window.addEventListener('resize', this.resizeMap);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.resizeMap);\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = L.map(this.$refs.map).fitBounds([\r\n        [28.2817100, 117.1911600],\r\n        [28.3225200, 117.2551900]\r\n      ]);\r\n\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n        maxZoom: 18\r\n      }).addTo(this.map);\r\n\r\n      // 添加地图点击事件监听器\r\n      this.map.on('click', this.handleMapClick);\r\n    },\r\n    resizeMap() {\r\n      this.$nextTick(() => {\r\n        this.map.invalidateSize();\r\n      });\r\n    },\r\n    // 处理地图点击事件的方法\r\n    handleMapClick(e) {\r\n      const latlng = e.latlng;\r\n\r\n      if (!this.startPoint) {\r\n        // 设置起点\r\n        this.startPoint = latlng;\r\n        // 添加起点标记\r\n        this.startMarker = L.marker(latlng, {\r\n          icon: L.divIcon({\r\n            className: 'custom-marker',\r\n            html: '<div class=\"marker-start\">起点</div>'\r\n          })\r\n        }).addTo(this.map);\r\n      } else if (!this.endPoint) {\r\n        // 设置终点\r\n        this.endPoint = latlng;\r\n        // 添加终点标记\r\n        this.endMarker = L.marker(latlng, {\r\n          icon: L.divIcon({\r\n            className: 'custom-marker',\r\n            html: '<div class=\"marker-end\">终点</div>'\r\n          })\r\n        }).addTo(this.map);\r\n      }\r\n    },\r\n    // 格式化坐标显示\r\n    formatCoordinate(point) {\r\n      return `纬度: ${point.lat.toFixed(6)}, 经度: ${point.lng.toFixed(6)}`;\r\n    },\r\n    // 重置选择的点\r\n    resetPoints() {\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n      if (this.endMarker) {\r\n        this.map.removeLayer(this.endMarker);\r\n      }\r\n      if (this.pathLayer) {\r\n        this.map.removeLayer(this.pathLayer);\r\n      }\r\n      this.startPoint = null;\r\n      this.endPoint = null;\r\n      this.startMarker = null;\r\n      this.endMarker = null;\r\n    },\r\n    async findShortestPath() {\r\n      if (!this.startPoint || !this.endPoint) {\r\n        alert('请先选择起点和终点');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8081/shortest_path', {\r\n          startPoint: {\r\n            lat: this.startPoint.lat,\r\n            lon: this.startPoint.lng\r\n          },\r\n          endPoint: {\r\n            lat: this.endPoint.lat,\r\n            lon: this.endPoint.lng\r\n          }\r\n        });\r\n\r\n        if (this.pathLayer) {\r\n          this.map.removeLayer(this.pathLayer);\r\n        }\r\n\r\n        const path = response.data.path;\r\n        const coordinates = path.map(nodeId => {\r\n          const node = this.nodes[nodeId];\r\n          return [node.lat, node.lon];\r\n        });\r\n\r\n        this.pathLayer = L.polyline(coordinates, {color: 'blue'}).addTo(this.map);\r\n        this.map.fitBounds(this.pathLayer.getBounds());\r\n      } catch (error) {\r\n        console.error('Error finding shortest path:', error);\r\n        alert('查找最短路径时发生错误，请查看控制台了解详情。');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.map-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.map {\r\n  flex: 1;\r\n}\r\n\r\n.controls {\r\n  padding: 10px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.coordinate-info {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.custom-marker {\r\n  background: none;\r\n  border: none;\r\n}\r\n\r\n.marker-start {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n.marker-end {\r\n  background-color: #f44336;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\nbutton {\r\n  margin: 5px;\r\n  padding: 8px 16px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #1976D2;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}