{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = {\n  class: \"search-container\"\n};\nconst _hoisted_4 = {\n  class: \"search-box\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"suggestions-list\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  class: \"suggestion-district\"\n};\nconst _hoisted_8 = {\n  class: \"search-box\"\n};\nconst _hoisted_9 = {\n  key: 0,\n  class: \"suggestions-list\"\n};\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = {\n  class: \"suggestion-district\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"coordinate-info\"\n};\nconst _hoisted_13 = {\n  key: 1,\n  class: \"coordinate-info\"\n};\nconst _hoisted_14 = [\"disabled\"];\nconst _hoisted_15 = [\"disabled\"];\nconst _hoisted_16 = {\n  key: 3,\n  class: \"instruction-panel\"\n};\nconst _hoisted_17 = {\n  class: \"map\",\n  ref: \"map\"\n};\nconst _hoisted_18 = {\n  key: 0,\n  class: \"route-info-panel\"\n};\nconst _hoisted_19 = {\n  class: \"route-summary\"\n};\nconst _hoisted_20 = {\n  class: \"route-steps\"\n};\nconst _hoisted_21 = {\n  class: \"step-details\"\n};\nconst _hoisted_22 = {\n  key: 1,\n  class: \"loading-overlay\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 控制面板：包含搜索和操作区域 \"), _createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 搜索区域：包含起点和终点搜索框 \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 起点搜索框组件 \"), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startLocationQuery = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.handleStartLocationSearch && $options.handleStartLocationSearch(...args)),\n    onFocus: _cache[2] || (_cache[2] = $event => $data.isStartSearchActive = true),\n    onBlur: _cache[3] || (_cache[3] = $event => $options.handleSearchBlur('start')),\n    placeholder: \"请输入起点位置\",\n    class: \"location-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.startLocationQuery]]), _createCommentVNode(\" 起点位置建议列表 \"), $data.isStartSearchActive && $data.startSearchSuggestions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.startSearchSuggestions, suggestion => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: suggestion.id,\n      onClick: $event => $options.handleStartLocationSelect(suggestion),\n      class: \"suggestion-item\"\n    }, [_createTextVNode(_toDisplayString(suggestion.name) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(suggestion.district), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 终点搜索框组件 \"), _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.endLocationQuery = $event),\n    onInput: _cache[5] || (_cache[5] = (...args) => $options.handleEndLocationSearch && $options.handleEndLocationSearch(...args)),\n    onFocus: _cache[6] || (_cache[6] = $event => $data.isEndSearchActive = true),\n    onBlur: _cache[7] || (_cache[7] = $event => $options.handleSearchBlur('end')),\n    placeholder: \"请输入终点位置\",\n    class: \"location-input\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.endLocationQuery]]), _createCommentVNode(\" 终点位置建议列表 \"), $data.isEndSearchActive && $data.endSearchSuggestions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.endSearchSuggestions, suggestion => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: suggestion.id,\n      onClick: $event => $options.handleEndLocationSelect(suggestion),\n      class: \"suggestion-item\"\n    }, [_createTextVNode(_toDisplayString(suggestion.name) + \" \", 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(suggestion.district), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_10);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)])]), _createCommentVNode(\" 坐标信息显示区域 \"), $data.startPoint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, \" 起点: \" + _toDisplayString($options.formatCoordinate($data.startPoint)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.endPoint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, \" 终点: \" + _toDisplayString($options.formatCoordinate($data.endPoint)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 操作按钮区域 \"), $data.startPoint && $data.endPoint ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[8] || (_cache[8] = (...args) => $options.findShortestPath && $options.findShortestPath(...args)),\n    disabled: $data.loading,\n    class: \"action-button\"\n  }, _toDisplayString($data.loading ? '路径计算中...' : '查找最短路径'), 9 /* TEXT, PROPS */, _hoisted_14)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => $options.resetPoints && $options.resetPoints(...args)),\n    disabled: $data.loading,\n    class: \"action-button\"\n  }, \" 重置选择点 \", 8 /* PROPS */, _hoisted_15), _createCommentVNode(\" 操作提示区域 \"), !$data.startPoint || !$data.endPoint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, _toDisplayString(!$data.startPoint ? '请选择或搜索起点' : '请选择或搜索终点'), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 地图显示区域 \"), _createElementVNode(\"div\", _hoisted_17, null, 512 /* NEED_PATCH */), _createCommentVNode(\" 路径信息面板 \"), $data.routeInfo ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [_cache[11] || (_cache[11] = _createElementVNode(\"h3\", null, \"路径信息\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_19, [_createElementVNode(\"div\", null, \"总距离: \" + _toDisplayString(($data.routeInfo.totalDistance / 1000).toFixed(2)) + \"公里\", 1 /* TEXT */), _createElementVNode(\"div\", null, \"预计用时: \" + _toDisplayString(Math.round($data.routeInfo.totalDuration / 60)) + \"分钟\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_20, [_cache[10] || (_cache[10] = _createElementVNode(\"h4\", null, \"导航步骤:\", -1 /* HOISTED */)), _createElementVNode(\"ol\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.routeInfo.steps, (step, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createTextVNode(_toDisplayString(step.instruction) + \" \", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_21, _toDisplayString(step.distance.toFixed(0)) + \"米 | \" + _toDisplayString(Math.round(step.duration / 60)) + \"分钟 \", 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" 加载提示遮罩 \"), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_22, _cache[12] || (_cache[12] = [_createElementVNode(\"div\", {\n    class: \"loading-spinner\"\n  }, null, -1 /* HOISTED */), _createElementVNode(\"div\", {\n    class: \"loading-text\"\n  }, \"正在计算最佳路径...\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_cache","$event","$data","startLocationQuery","onInput","args","$options","handleStartLocationSearch","onFocus","isStartSearchActive","onBlur","handleSearchBlur","placeholder","startSearchSuggestions","length","_hoisted_5","_Fragment","_renderList","suggestion","id","onClick","handleStartLocationSelect","_createTextVNode","_toDisplayString","name","_hoisted_7","district","_hoisted_6","_hoisted_8","endLocationQuery","handleEndLocationSearch","isEndSearchActive","endSearchSuggestions","_hoisted_9","handleEndLocationSelect","_hoisted_11","_hoisted_10","startPoint","_hoisted_12","formatCoordinate","endPoint","_hoisted_13","findShortestPath","disabled","loading","_hoisted_14","resetPoints","_hoisted_15","_hoisted_16","_hoisted_17","routeInfo","_hoisted_18","_hoisted_19","totalDistance","toFixed","Math","round","totalDuration","_hoisted_20","steps","step","index","instruction","_hoisted_21","distance","duration","_hoisted_22"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapView.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <!-- 控制面板：包含搜索和操作区域 -->\r\n    <div class=\"controls\">\r\n      <!-- 搜索区域：包含起点和终点搜索框 -->\r\n      <div class=\"search-container\">\r\n        <!-- 起点搜索框组件 -->\r\n        <div class=\"search-box\">\r\n          <input\r\n              v-model=\"startLocationQuery\"\r\n              @input=\"handleStartLocationSearch\"\r\n              @focus=\"isStartSearchActive = true\"\r\n              @blur=\"handleSearchBlur('start')\"\r\n              placeholder=\"请输入起点位置\"\r\n              class=\"location-input\"\r\n          />\r\n          <!-- 起点位置建议列表 -->\r\n          <div v-if=\"isStartSearchActive && startSearchSuggestions.length > 0\" class=\"suggestions-list\">\r\n            <div\r\n                v-for=\"suggestion in startSearchSuggestions\"\r\n                :key=\"suggestion.id\"\r\n                @click=\"handleStartLocationSelect(suggestion)\"\r\n                class=\"suggestion-item\"\r\n            >\r\n              {{ suggestion.name }}\r\n              <span class=\"suggestion-district\">{{ suggestion.district }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 终点搜索框组件 -->\r\n        <div class=\"search-box\">\r\n          <input\r\n              v-model=\"endLocationQuery\"\r\n              @input=\"handleEndLocationSearch\"\r\n              @focus=\"isEndSearchActive = true\"\r\n              @blur=\"handleSearchBlur('end')\"\r\n              placeholder=\"请输入终点位置\"\r\n              class=\"location-input\"\r\n          />\r\n          <!-- 终点位置建议列表 -->\r\n          <div v-if=\"isEndSearchActive && endSearchSuggestions.length > 0\" class=\"suggestions-list\">\r\n            <div\r\n                v-for=\"suggestion in endSearchSuggestions\"\r\n                :key=\"suggestion.id\"\r\n                @click=\"handleEndLocationSelect(suggestion)\"\r\n                class=\"suggestion-item\"\r\n            >\r\n              {{ suggestion.name }}\r\n              <span class=\"suggestion-district\">{{ suggestion.district }}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 坐标信息显示区域 -->\r\n      <div v-if=\"startPoint\" class=\"coordinate-info\">\r\n        起点: {{ formatCoordinate(startPoint) }}\r\n      </div>\r\n      <div v-if=\"endPoint\" class=\"coordinate-info\">\r\n        终点: {{ formatCoordinate(endPoint) }}\r\n      </div>\r\n\r\n      <!-- 操作按钮区域 -->\r\n      <button\r\n          v-if=\"startPoint && endPoint\"\r\n          @click=\"findShortestPath\"\r\n          :disabled=\"loading\"\r\n          class=\"action-button\"\r\n      >\r\n        {{ loading ? '路径计算中...' : '查找最短路径' }}\r\n      </button>\r\n      <button\r\n          @click=\"resetPoints\"\r\n          :disabled=\"loading\"\r\n          class=\"action-button\"\r\n      >\r\n        重置选择点\r\n      </button>\r\n\r\n      <!-- 操作提示区域 -->\r\n      <div class=\"instruction-panel\" v-if=\"!startPoint || !endPoint\">\r\n        {{ !startPoint ? '请选择或搜索起点' : '请选择或搜索终点' }}\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 地图显示区域 -->\r\n    <div class=\"map\" ref=\"map\"></div>\r\n\r\n    <!-- 路径信息面板 -->\r\n    <div v-if=\"routeInfo\" class=\"route-info-panel\">\r\n      <h3>路径信息</h3>\r\n      <div class=\"route-summary\">\r\n        <div>总距离: {{ (routeInfo.totalDistance/1000).toFixed(2) }}公里</div>\r\n        <div>预计用时: {{ Math.round(routeInfo.totalDuration/60) }}分钟</div>\r\n      </div>\r\n      <div class=\"route-steps\">\r\n        <h4>导航步骤:</h4>\r\n        <ol>\r\n          <li v-for=\"(step, index) in routeInfo.steps\" :key=\"index\">\r\n            {{ step.instruction }}\r\n            <div class=\"step-details\">\r\n              {{ (step.distance).toFixed(0) }}米 |\r\n              {{ Math.round(step.duration/60) }}分钟\r\n            </div>\r\n          </li>\r\n        </ol>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 加载提示遮罩 -->\r\n    <div v-if=\"loading\" class=\"loading-overlay\">\r\n      <div class=\"loading-spinner\"></div>\r\n      <div class=\"loading-text\">正在计算最佳路径...</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'MapNavigation',\r\n\r\n  data() {\r\n    return {\r\n      // 地图相关数据\r\n      map: null,                    // Leaflet地图实例\r\n      pathLayer: null,              // 路径图层\r\n      startPoint: null,             // 起点坐标\r\n      endPoint: null,               // 终点坐标\r\n      startMarker: null,            // 起点标记\r\n      endMarker: null,              // 终点标记\r\n      routeInfo: null,              // 路径信息\r\n      navigationMarkers: [],        // 导航标记数组\r\n      loading: false,               // 加载状态\r\n\r\n      // 搜索相关数据\r\n      startLocationQuery: '',       // 起点搜索关键词\r\n      endLocationQuery: '',         // 终点搜索关键词\r\n      startSearchSuggestions: [],   // 起点搜索建议\r\n      endSearchSuggestions: [],     // 终点搜索建议\r\n      isStartSearchActive: false,   // 起点搜索框激活状态\r\n      isEndSearchActive: false,     // 终点搜索框激活状态\r\n      searchTimeout: null,          // 搜索防抖定时器\r\n\r\n      // 高德地图API配置\r\n      amapKey: 'b44c18bdc514de170db976d407902980'  // 替换为实际的API Key\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.initMap();\r\n    this.resizeMap();\r\n    // 监听窗口大小变化\r\n    window.addEventListener('resize', this.resizeMap);\r\n  },\r\n\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.resizeMap);\r\n  },\r\n\r\n  methods: {\r\n    // 初始化地图\r\n    initMap() {\r\n      // 创建地图实例并设置初始视图\r\n      this.map = L.map(this.$refs.map).setView([28.3021, 117.2232], 13);\r\n\r\n      // 添加OpenStreetMap图层\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors',\r\n        maxZoom: 19\r\n      }).addTo(this.map);\r\n\r\n      // 加载道路网络\r\n      this.loadRoadNetwork();\r\n\r\n      // 添加地图点击事件监听器\r\n      this.map.on('click', this.handleMapClick);\r\n    },\r\n\r\n    // 加载道路网络数据\r\n    async loadRoadNetwork() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8081/roads');\r\n        this.drawRoads(response.data.roads);\r\n      } catch (error) {\r\n        console.error('加载道路数据失败:', error);\r\n        // 可以添加用户提示\r\n        alert('道路数据加载失败，请刷新页面重试');\r\n      }\r\n    },\r\n\r\n    // 绘制道路网络\r\n    drawRoads(roads) {\r\n      roads.forEach(road => {\r\n        if (road.coordinates.length >= 2) {\r\n          const coordinates = road.coordinates.map(coord => [coord.lat, coord.lng]);\r\n          L.polyline(coordinates, {\r\n            color: '#ccc',\r\n            weight: 2,\r\n            opacity: 0.5\r\n          }).addTo(this.map);\r\n        }\r\n      });\r\n    },\r\n\r\n    // 处理地图点击事件\r\n    handleMapClick(e) {\r\n      const latlng = e.latlng;\r\n      if (!this.startPoint) {\r\n        this.setStartPoint(latlng);\r\n      } else if (!this.endPoint) {\r\n        this.setEndPoint(latlng);\r\n      }\r\n    },\r\n\r\n    // 处理起点位置搜索\r\n    async handleStartLocationSearch() {\r\n      clearTimeout(this.searchTimeout);\r\n      this.searchTimeout = setTimeout(() => {\r\n        this.searchLocation(this.startLocationQuery, 'start');\r\n      }, 300); // 300ms防抖\r\n    },\r\n\r\n    // 处理终点位置搜索\r\n    async handleEndLocationSearch() {\r\n      clearTimeout(this.searchTimeout);\r\n      this.searchTimeout = setTimeout(() => {\r\n        this.searchLocation(this.endLocationQuery, 'end');\r\n      }, 300); // 300ms防抖\r\n    },\r\n\r\n    // 搜索位置API调用\r\n    async searchLocation(query, type) {\r\n      if (!query.trim()) {\r\n        if (type === 'start') {\r\n          this.startSearchSuggestions = [];\r\n        } else {\r\n          this.endSearchSuggestions = [];\r\n        }\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.get(\r\n            `https://restapi.amap.com/v3/assistant/inputtips`,\r\n            {\r\n              params: {\r\n                keywords: query,\r\n                key: this.amapKey,\r\n                city: '鹰潭',\r\n                output: 'JSON'\r\n              }\r\n            }\r\n        );\r\n\r\n        if (response.data.status === '1' && response.data.tips) {\r\n          const suggestions = response.data.tips\r\n              .filter(tip => tip.location) // 只保留有经纬度信息的建议\r\n              .map(tip => ({\r\n                id: tip.id || Math.random().toString(),\r\n                name: tip.name,\r\n                district: tip.district,\r\n                location: tip.location\r\n              }));\r\n\r\n          if (type === 'start') {\r\n            this.startSearchSuggestions = suggestions;\r\n          } else {\r\n            this.endSearchSuggestions = suggestions;\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('位置搜索失败:', error);\r\n        // 可以添加用户提示\r\n        alert('位置搜索服务暂时不可用，请稍后重试');\r\n      }\r\n    },\r\n\r\n    // 处理起点选择\r\n    handleStartLocationSelect(suggestion) {\r\n      const [lng, lat] = suggestion.location.split(',').map(Number);\r\n      this.setStartPoint({ lat, lng });\r\n      this.startLocationQuery = suggestion.name;\r\n      this.startSearchSuggestions = [];\r\n      this.isStartSearchActive = false;\r\n    },\r\n\r\n    // 处理终点选择\r\n    handleEndLocationSelect(suggestion) {\r\n      const [lng, lat] = suggestion.location.split(',').map(Number);\r\n      this.setEndPoint({ lat, lng });\r\n      this.endLocationQuery = suggestion.name;\r\n      this.endSearchSuggestions = [];\r\n      this.isEndSearchActive = false;\r\n    },\r\n\r\n    // 处理搜索框失焦\r\n    handleSearchBlur(type) {\r\n      // 延迟关闭建议列表，确保可以点击选项\r\n      setTimeout(() => {\r\n        if (type === 'start') {\r\n          this.isStartSearchActive = false;\r\n        } else {\r\n          this.isEndSearchActive = false;\r\n        }\r\n      }, 200);\r\n    },\r\n\r\n    // 设置起点\r\n    setStartPoint(latlng) {\r\n      this.startPoint = latlng;\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n      this.startMarker = L.marker(latlng, {\r\n        icon: L.divIcon({\r\n          className: 'custom-marker',\r\n          html: '<div class=\"marker-start\">起点</div>'\r\n        })\r\n      }).addTo(this.map);\r\n    },\r\n\r\n    // 设置终点\r\n    setEndPoint(latlng) {\r\n      this.endPoint = latlng;\r\n      if (this.endMarker) {\r\n        this.map.removeLayer(this.endMarker);\r\n      }\r\n      this.endMarker = L.marker(latlng, {\r\n        icon: L.divIcon({\r\n          className: 'custom-marker',\r\n          html: '<div class=\"marker-end\">终点</div>'\r\n        })\r\n      }).addTo(this.map);\r\n    },\r\n\r\n    // 查找最短路径\r\n    async findShortestPath() {\r\n      if (!this.startPoint || !this.endPoint) {\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      try {\r\n        const response = await axios.post('http://localhost:8081/find_path', {\r\n          startLat: this.startPoint.lat,\r\n          startLon: this.startPoint.lng,\r\n          endLat: this.endPoint.lat,\r\n          endLon: this.endPoint.lng\r\n        });\r\n\r\n        if (response.data.success) {\r\n          this.clearRoute();\r\n          this.drawRoute(response.data);\r\n          this.routeInfo = response.data;\r\n        } else {\r\n          alert('未找到有效路径，请尝试选择其他地点');\r\n        }\r\n      } catch (error) {\r\n        console.error('查找路径失败:', error);\r\n        alert('路径查找失败，请稍后重试');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 绘制路径\r\n    drawRoute(routeData) {\r\n      // 绘制路径线\r\n      const coordinates = routeData.coordinates.map(coord => [coord.lat, coord.lng]);\r\n      this.pathLayer = L.polyline(coordinates, {\r\n        color: '#2196F3',\r\n        weight: 5,\r\n        opacity: 0.7\r\n      }).addTo(this.map);\r\n\r\n      // 添加导航点标记\r\n      routeData.steps.forEach((step, index) => {\r\n        if (step.instruction) {\r\n          const marker = L.marker([step.lat, step.lng], {\r\n            icon: L.divIcon({\r\n              className: 'navigation-marker',\r\n              html: `<div class=\"step-marker\">${index + 1}</div>`\r\n            })\r\n          })\r\n              .bindPopup(\r\n                  `<div class=\"step-popup\">\r\n              <b>${step.instruction}</b><br>\r\n              距离: ${(step.distance).toFixed(0)}米<br>\r\n              预计时间: ${Math.round(step.duration/60)}分钟\r\n            </div>`\r\n              )\r\n              .addTo(this.map);\r\n\r\n          this.navigationMarkers.push(marker);\r\n        }\r\n      });\r\n\r\n      // 调整地图视图以显示整个路径\r\n      this.map.fitBounds(this.pathLayer.getBounds(), {\r\n        padding: [50, 50]\r\n      });\r\n    },\r\n\r\n    // 清除路径\r\n    clearRoute() {\r\n      if (this.pathLayer) {\r\n        this.map.removeLayer(this.pathLayer);\r\n      }\r\n      this.navigationMarkers.forEach(marker => {\r\n        this.map.removeLayer(marker);\r\n      });\r\n      // 清除路径（继续上一段代码）\r\n      this.navigationMarkers = [];\r\n      this.routeInfo = null;\r\n    },\r\n\r\n    // 重置所有点\r\n    resetPoints() {\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n      if (this.endMarker) {\r\n        this.map.removeLayer(this.endMarker);\r\n      }\r\n      this.clearRoute();\r\n      this.startPoint = null;\r\n      this.endPoint = null;\r\n      this.startMarker = null;\r\n      this.endMarker = null;\r\n      this.startLocationQuery = '';\r\n      this.endLocationQuery = '';\r\n      this.startSearchSuggestions = [];\r\n      this.endSearchSuggestions = [];\r\n    },\r\n\r\n    // 格式化坐标显示\r\n    formatCoordinate(point) {\r\n      return `纬度: ${point.lat.toFixed(6)}, 经度: ${point.lng.toFixed(6)}`;\r\n    },\r\n\r\n    // 调整地图大小\r\n    resizeMap() {\r\n      this.$nextTick(() => {\r\n        this.map?.invalidateSize();\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* 基础布局样式 */\r\n.map-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n  position: relative;\r\n}\r\n\r\n.map {\r\n  flex: 1;\r\n  z-index: 1;\r\n}\r\n\r\n/* 控制面板样式 */\r\n.controls {\r\n  padding: 15px;\r\n  background-color: rgba(255, 255, 255, 0.95);\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.15);\r\n  z-index: 2;\r\n  border-radius: 8px;\r\n  margin: 10px;\r\n}\r\n\r\n/* 搜索区域样式 */\r\n.search-container {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.search-box {\r\n  position: relative;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.location-input {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.location-input:focus {\r\n  outline: none;\r\n  border-color: #2196F3;\r\n  box-shadow: 0 0 0 2px rgba(33, 150, 243, 0.1);\r\n}\r\n\r\n/* 搜索建议列表样式 */\r\n.suggestions-list {\r\n  position: absolute;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: white;\r\n  border: 1px solid #ddd;\r\n  border-top: none;\r\n  border-radius: 0 0 4px 4px;\r\n  max-height: 200px;\r\n  overflow-y: auto;\r\n  z-index: 1000;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n.suggestion-item {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #eee;\r\n  transition: background-color 0.2s;\r\n}\r\n\r\n.suggestion-item:last-child {\r\n  border-bottom: none;\r\n}\r\n\r\n.suggestion-item:hover {\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.suggestion-district {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-left: 8px;\r\n}\r\n\r\n/* 坐标信息显示样式 */\r\n.coordinate-info {\r\n  margin: 5px 0;\r\n  padding: 8px;\r\n  font-size: 14px;\r\n  color: #333;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n}\r\n\r\n/* 按钮样式 */\r\n.action-button {\r\n  margin: 5px;\r\n  padding: 8px 16px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  font-size: 14px;\r\n  min-width: 120px;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #1976D2;\r\n}\r\n\r\n.action-button:disabled {\r\n  background-color: #ccc;\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* 标记点样式 */\r\n.marker-start {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  white-space: nowrap;\r\n}\r\n\r\n.marker-end {\r\n  background-color: #f44336;\r\n  color: white;\r\n  padding: 6px 12px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n  white-space: nowrap;\r\n}\r\n\r\n/* 导航标记样式 */\r\n.step-marker {\r\n  background-color: #2196F3;\r\n  color: white;\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 12px;\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.2);\r\n}\r\n\r\n/* 路径信息面板样式 */\r\n.route-info-panel {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  max-width: 300px;\r\n  max-height: 70vh;\r\n  overflow-y: auto;\r\n  z-index: 2;\r\n}\r\n\r\n.route-summary {\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background-color: #f5f5f5;\r\n  border-radius: 4px;\r\n}\r\n\r\n.route-steps {\r\n  margin-top: 10px;\r\n}\r\n\r\n.route-steps ol {\r\n  padding-left: 20px;\r\n  margin: 0;\r\n}\r\n\r\n.route-steps li {\r\n  margin-bottom: 10px;\r\n  line-height: 1.4;\r\n}\r\n\r\n.step-details {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-top: 4px;\r\n}\r\n\r\n/* 弹出窗口样式 */\r\n.step-popup {\r\n  padding: 8px;\r\n  min-width: 200px;\r\n  line-height: 1.4;\r\n}\r\n\r\n/* 说明面板样式 */\r\n.instruction-panel {\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  background-color: #e3f2fd;\r\n  border-radius: 4px;\r\n  color: #1976D2;\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n\r\n/* 加载遮罩样式 */\r\n.loading-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background-color: rgba(255, 255, 255, 0.8);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.loading-spinner {\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 4px solid #f3f3f3;\r\n  border-top: 4px solid #2196F3;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n.loading-text {\r\n  margin-top: 10px;\r\n  color: #333;\r\n  font-size: 14px;\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n\r\n/* 响应式布局样式 */\r\n@media (max-width: 768px) {\r\n  .route-info-panel {\r\n    max-width: 100%;\r\n    top: auto;\r\n    bottom: 0;\r\n    right: 0;\r\n    left: 0;\r\n    max-height: 40vh;\r\n    border-radius: 8px 8px 0 0;\r\n  }\r\n\r\n  .controls {\r\n    margin: 5px;\r\n    padding: 10px;\r\n  }\r\n\r\n  .action-button {\r\n    width: 100%;\r\n    margin: 5px 0;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}