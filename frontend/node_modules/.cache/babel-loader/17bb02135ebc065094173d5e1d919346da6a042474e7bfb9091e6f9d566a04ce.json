{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { ElMessage } from 'element-plus';\nimport 'element-plus/dist/index.css';\nexport default {\n  name: 'OsmMap',\n  data() {\n    return {\n      map: null,\n      startPoint: '',\n      endPoint: '',\n      startMarker: null,\n      endMarker: null,\n      routePath: null,\n      tileLayer: null,\n      selectedStartLocation: null,\n      selectedEndLocation: null,\n      searchTimeout: null,\n      // 上海市的地理边界范围\n      shanghaiBounds: {\n        minLon: 120.85,\n        maxLon: 122.05,\n        minLat: 30.67,\n        maxLat: 31.87\n      }\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    initMap() {\n      // 初始化地图时将视图中心设置在上海市中心\n      this.map = L.map('map', {\n        center: [31.2304, 121.4737],\n        // 上海市中心坐标\n        zoom: 11,\n        minZoom: 9,\n        // 限制最小缩放级别，确保用户能看到整个上海\n        maxZoom: 18,\n        zoomControl: true,\n        doubleClickZoom: true,\n        scrollWheelZoom: true\n      });\n\n      // 添加 OSM 底图\n      this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 18,\n        subdomains: ['a', 'b', 'c']\n      }).addTo(this.map);\n\n      // 添加比例尺\n      L.control.scale({\n        imperial: false,\n        metric: true\n      }).addTo(this.map);\n\n      // 为上海市添加边界框以帮助用户识别搜索范围\n      L.rectangle([[this.shanghaiBounds.minLat, this.shanghaiBounds.minLon], [this.shanghaiBounds.maxLat, this.shanghaiBounds.maxLon]], {\n        color: \"#ff7800\",\n        weight: 1,\n        fillOpacity: 0,\n        dashArray: '5, 10'\n      }).addTo(this.map);\n    },\n    async querySearchAsync(queryString, callback) {\n      if (!queryString) {\n        callback([]);\n        return;\n      }\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(async () => {\n        try {\n          // 构建搜索URL，添加上海市的限定条件\n          const response = await fetch(`https://nominatim.openstreetmap.org/search?` + `format=json&q=${encodeURIComponent(queryString + ', 上海市')}` +\n          // 在搜索词后添加\"上海市\"\n          `&viewbox=${this.shanghaiBounds.minLon},${this.shanghaiBounds.maxLat},` + `${this.shanghaiBounds.maxLon},${this.shanghaiBounds.minLat}` + `&bounded=1&limit=8` +\n          // 增加结果数量到8个\n          `&countrycodes=cn`, {\n            headers: {\n              'Accept-Language': 'zh-CN'\n            }\n          });\n          if (!response.ok) {\n            throw new Error('搜索服务请求失败');\n          }\n          const data = await response.json();\n\n          // 过滤结果，确保只返回上海市内的位置\n          const suggestions = data.filter(item => item.display_name.includes('上海市')).map(item => ({\n            value: item.display_name.split(',')[0],\n            display_name: item.display_name,\n            lat: parseFloat(item.lat),\n            lon: parseFloat(item.lon),\n            osm_id: item.osm_id,\n            osm_type: item.osm_type\n          }));\n          callback(suggestions);\n        } catch (error) {\n          console.error('搜索错误:', error);\n          ElMessage.error('地点搜索失败，请重试');\n          callback([]);\n        }\n      }, 300);\n    },\n    // 格式化地址显示，突出显示上海市内的地址部分\n    formatAddress(address) {\n      const parts = address.split(',').map(part => part.trim());\n      return parts.filter(part => part.includes('上海市') || !part.includes('中国')).join(', ');\n    },\n    handleStartSelect(item) {\n      this.selectedStartLocation = item;\n      if (this.startMarker) {\n        this.map.removeLayer(this.startMarker);\n      }\n      this.startMarker = L.marker([item.lat, item.lon], {\n        title: item.value,\n        riseOnHover: true // 鼠标悬停时突出显示标记\n      }).addTo(this.map).bindPopup(`起点：${item.value}`).openPopup();\n      this.map.flyTo([item.lat, item.lon], 15, {\n        duration: 1.5,\n        easeLinearity: 0.25\n      });\n    },\n    handleEndSelect(item) {\n      // 终点选择处理的代码与起点类似\n      // ... 其余代码保持不变\n    },\n    async searchRoute() {\n      // ... 路径搜索的代码保持不变\n    },\n    clearMap() {\n      // ... 清除地图标记的代码保持不变\n    }\n  }\n};","map":{"version":3,"names":["L","ElMessage","name","data","map","startPoint","endPoint","startMarker","endMarker","routePath","tileLayer","selectedStartLocation","selectedEndLocation","searchTimeout","shanghaiBounds","minLon","maxLon","minLat","maxLat","mounted","initMap","methods","center","zoom","minZoom","maxZoom","zoomControl","doubleClickZoom","scrollWheelZoom","attribution","subdomains","addTo","control","scale","imperial","metric","rectangle","color","weight","fillOpacity","dashArray","querySearchAsync","queryString","callback","clearTimeout","setTimeout","response","fetch","encodeURIComponent","headers","ok","Error","json","suggestions","filter","item","display_name","includes","value","split","lat","parseFloat","lon","osm_id","osm_type","error","console","formatAddress","address","parts","part","trim","join","handleStartSelect","removeLayer","marker","title","riseOnHover","bindPopup","openPopup","flyTo","duration","easeLinearity","handleEndSelect","searchRoute","clearMap"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapview.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <div class=\"search-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"9\">\r\n          <el-autocomplete\r\n              v-model=\"startPoint\"\r\n              :fetch-suggestions=\"querySearchAsync\"\r\n              placeholder=\"请输入上海市内的起点位置\"\r\n              :trigger-on-focus=\"false\"\r\n              clearable\r\n              @select=\"handleStartSelect\"\r\n              class=\"full-width\"\r\n          >\r\n            <template #default=\"{ item }\">\r\n              <div class=\"suggestion-item\">\r\n                <div class=\"name\">{{ item.display_name.split(',')[0] }}</div>\r\n                <div class=\"address\">{{ formatAddress(item.display_name) }}</div>\r\n              </div>\r\n            </template>\r\n          </el-autocomplete>\r\n        </el-col>\r\n        <el-col :span=\"9\">\r\n          <el-autocomplete\r\n              v-model=\"endPoint\"\r\n              :fetch-suggestions=\"querySearchAsync\"\r\n              placeholder=\"请输入上海市内的终点位置\"\r\n              :trigger-on-focus=\"false\"\r\n              clearable\r\n              @select=\"handleEndSelect\"\r\n              class=\"full-width\"\r\n          >\r\n            <template #default=\"{ item }\">\r\n              <div class=\"suggestion-item\">\r\n                <div class=\"name\">{{ item.display_name.split(',')[0] }}</div>\r\n                <div class=\"address\">{{ formatAddress(item.display_name) }}</div>\r\n              </div>\r\n            </template>\r\n          </el-autocomplete>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"primary\" @click=\"searchRoute\">查找路线</el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n    <div id=\"map\" class=\"map-view\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { ElMessage } from 'element-plus';\r\nimport 'element-plus/dist/index.css';\r\n\r\nexport default {\r\n  name: 'OsmMap',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      startPoint: '',\r\n      endPoint: '',\r\n      startMarker: null,\r\n      endMarker: null,\r\n      routePath: null,\r\n      tileLayer: null,\r\n      selectedStartLocation: null,\r\n      selectedEndLocation: null,\r\n      searchTimeout: null,\r\n      // 上海市的地理边界范围\r\n      shanghaiBounds: {\r\n        minLon: 120.85,\r\n        maxLon: 122.05,\r\n        minLat: 30.67,\r\n        maxLat: 31.87\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      // 初始化地图时将视图中心设置在上海市中心\r\n      this.map = L.map('map', {\r\n        center: [31.2304, 121.4737], // 上海市中心坐标\r\n        zoom: 11,\r\n        minZoom: 9,  // 限制最小缩放级别，确保用户能看到整个上海\r\n        maxZoom: 18,\r\n        zoomControl: true,\r\n        doubleClickZoom: true,\r\n        scrollWheelZoom: true\r\n      });\r\n\r\n      // 添加 OSM 底图\r\n      this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors',\r\n        maxZoom: 18,\r\n        subdomains: ['a', 'b', 'c']\r\n      }).addTo(this.map);\r\n\r\n      // 添加比例尺\r\n      L.control.scale({\r\n        imperial: false,\r\n        metric: true\r\n      }).addTo(this.map);\r\n\r\n      // 为上海市添加边界框以帮助用户识别搜索范围\r\n      L.rectangle([\r\n        [this.shanghaiBounds.minLat, this.shanghaiBounds.minLon],\r\n        [this.shanghaiBounds.maxLat, this.shanghaiBounds.maxLon]\r\n      ], {\r\n        color: \"#ff7800\",\r\n        weight: 1,\r\n        fillOpacity: 0,\r\n        dashArray: '5, 10'\r\n      }).addTo(this.map);\r\n    },\r\n\r\n    async querySearchAsync(queryString, callback) {\r\n      if (!queryString) {\r\n        callback([]);\r\n        return;\r\n      }\r\n\r\n      if (this.searchTimeout) {\r\n        clearTimeout(this.searchTimeout);\r\n      }\r\n\r\n      this.searchTimeout = setTimeout(async () => {\r\n        try {\r\n          // 构建搜索URL，添加上海市的限定条件\r\n          const response = await fetch(\r\n              `https://nominatim.openstreetmap.org/search?` +\r\n              `format=json&q=${encodeURIComponent(queryString + ', 上海市')}` + // 在搜索词后添加\"上海市\"\r\n              `&viewbox=${this.shanghaiBounds.minLon},${this.shanghaiBounds.maxLat},` +\r\n              `${this.shanghaiBounds.maxLon},${this.shanghaiBounds.minLat}` +\r\n              `&bounded=1&limit=8` +  // 增加结果数量到8个\r\n              `&countrycodes=cn`,\r\n              {\r\n                headers: {\r\n                  'Accept-Language': 'zh-CN'\r\n                }\r\n              }\r\n          );\r\n\r\n          if (!response.ok) {\r\n            throw new Error('搜索服务请求失败');\r\n          }\r\n\r\n          const data = await response.json();\r\n\r\n          // 过滤结果，确保只返回上海市内的位置\r\n          const suggestions = data\r\n              .filter(item => item.display_name.includes('上海市'))\r\n              .map(item => ({\r\n                value: item.display_name.split(',')[0],\r\n                display_name: item.display_name,\r\n                lat: parseFloat(item.lat),\r\n                lon: parseFloat(item.lon),\r\n                osm_id: item.osm_id,\r\n                osm_type: item.osm_type\r\n              }));\r\n\r\n          callback(suggestions);\r\n        } catch (error) {\r\n          console.error('搜索错误:', error);\r\n          ElMessage.error('地点搜索失败，请重试');\r\n          callback([]);\r\n        }\r\n      }, 300);\r\n    },\r\n\r\n    // 格式化地址显示，突出显示上海市内的地址部分\r\n    formatAddress(address) {\r\n      const parts = address.split(',').map(part => part.trim());\r\n      return parts\r\n          .filter(part => part.includes('上海市') || !part.includes('中国'))\r\n          .join(', ');\r\n    },\r\n\r\n    handleStartSelect(item) {\r\n      this.selectedStartLocation = item;\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n\r\n      this.startMarker = L.marker([item.lat, item.lon], {\r\n        title: item.value,\r\n        riseOnHover: true  // 鼠标悬停时突出显示标记\r\n      })\r\n          .addTo(this.map)\r\n          .bindPopup(`起点：${item.value}`)\r\n          .openPopup();\r\n\r\n      this.map.flyTo([item.lat, item.lon], 15, {\r\n        duration: 1.5,\r\n        easeLinearity: 0.25\r\n      });\r\n    },\r\n\r\n    handleEndSelect(item) {\r\n      // 终点选择处理的代码与起点类似\r\n      // ... 其余代码保持不变\r\n    },\r\n\r\n    async searchRoute() {\r\n      // ... 路径搜索的代码保持不变\r\n    },\r\n\r\n    clearMap() {\r\n      // ... 清除地图标记的代码保持不变\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 保持原有样式，添加一些新的样式来改善显示效果 */\r\n.suggestion-item {\r\n  padding: 8px 12px;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.suggestion-item:hover {\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.suggestion-item .name {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  color: #303133;\r\n}\r\n\r\n.suggestion-item .address {\r\n  font-size: 12px;\r\n  color: #666;\r\n  margin-top: 4px;\r\n  white-space: normal;\r\n  word-break: break-all;\r\n  line-height: 1.3;\r\n}\r\n\r\n/* ... 其他原有样式保持不变 */\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}