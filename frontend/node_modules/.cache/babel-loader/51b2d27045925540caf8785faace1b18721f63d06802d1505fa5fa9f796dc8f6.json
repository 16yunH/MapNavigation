{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"coordinate-info\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"coordinate-info\"\n};\nconst _hoisted_5 = {\n  class: \"map\",\n  ref: \"map\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 显示选中的坐标信息 \"), $data.startPoint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \" 起点: \" + _toDisplayString($options.formatCoordinate($data.startPoint)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.endPoint ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \" 终点: \" + _toDisplayString($options.formatCoordinate($data.endPoint)), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $data.startPoint && $data.endPoint ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.findShortestPath && $options.findShortestPath(...args))\n  }, \"查找最短路径\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.resetPoints && $options.resetPoints(...args))\n  }, \"重置选择点\")]), _createElementVNode(\"div\", _hoisted_5, null, 512 /* NEED_PATCH */)]);\n}","map":{"version":3,"names":["class","key","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","startPoint","_hoisted_3","_toDisplayString","$options","formatCoordinate","endPoint","_hoisted_4","onClick","_cache","args","findShortestPath","resetPoints","_hoisted_5"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapView.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <div class=\"controls\">\r\n      <!-- 显示选中的坐标信息 -->\r\n      <div v-if=\"startPoint\" class=\"coordinate-info\">\r\n        起点: {{ formatCoordinate(startPoint) }}\r\n      </div>\r\n      <div v-if=\"endPoint\" class=\"coordinate-info\">\r\n        终点: {{ formatCoordinate(endPoint) }}\r\n      </div>\r\n      <button v-if=\"startPoint && endPoint\" @click=\"findShortestPath\">查找最短路径</button>\r\n      <button @click=\"resetPoints\">重置选择点</button>\r\n    </div>\r\n    <div class=\"map\" ref=\"map\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      map: null,\r\n      pathLayer: null,\r\n      nodes: {},\r\n      // 新增的数据属性\r\n      startPoint: null,\r\n      endPoint: null,\r\n      startMarker: null,\r\n      endMarker: null\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      const response = await axios.get('http://localhost:8081/nodes');\r\n      this.nodes = response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching nodes:', error);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    this.resizeMap();\r\n    window.addEventListener('resize', this.resizeMap);\r\n  },\r\n  beforeUnmount() {\r\n    window.removeEventListener('resize', this.resizeMap);\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      this.map = L.map(this.$refs.map).fitBounds([\r\n        [28.2817100, 117.1911600],\r\n        [28.3225200, 117.2551900]\r\n      ]);\r\n\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors',\r\n        maxZoom: 18\r\n      }).addTo(this.map);\r\n\r\n      // 添加地图点击事件监听器\r\n      this.map.on('click', this.handleMapClick);\r\n    },\r\n    resizeMap() {\r\n      this.$nextTick(() => {\r\n        this.map.invalidateSize();\r\n      });\r\n    },\r\n    // 处理地图点击事件的方法\r\n    handleMapClick(e) {\r\n      const latlng = e.latlng;\r\n\r\n      if (!this.startPoint) {\r\n        // 设置起点\r\n        this.startPoint = latlng;\r\n        // 添加起点标记\r\n        this.startMarker = L.marker(latlng, {\r\n          icon: L.divIcon({\r\n            className: 'custom-marker',\r\n            html: '<div class=\"marker-start\">起点</div>'\r\n          })\r\n        }).addTo(this.map);\r\n      } else if (!this.endPoint) {\r\n        // 设置终点\r\n        this.endPoint = latlng;\r\n        // 添加终点标记\r\n        this.endMarker = L.marker(latlng, {\r\n          icon: L.divIcon({\r\n            className: 'custom-marker',\r\n            html: '<div class=\"marker-end\">终点</div>'\r\n          })\r\n        }).addTo(this.map);\r\n      }\r\n    },\r\n    // 格式化坐标显示\r\n    formatCoordinate(point) {\r\n      return `纬度: ${point.lat.toFixed(6)}, 经度: ${point.lng.toFixed(6)}`;\r\n    },\r\n    // 重置选择的点\r\n    resetPoints() {\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n      if (this.endMarker) {\r\n        this.map.removeLayer(this.endMarker);\r\n      }\r\n      if (this.pathLayer) {\r\n        this.map.removeLayer(this.pathLayer);\r\n      }\r\n      this.startPoint = null;\r\n      this.endPoint = null;\r\n      this.startMarker = null;\r\n      this.endMarker = null;\r\n    },\r\n    async findShortestPath() {\r\n      if (!this.startPoint || !this.endPoint) {\r\n        alert('请先选择起点和终点');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await axios.post('http://localhost:8081/shortest_path', {\r\n          startPoint: {\r\n            lat: this.startPoint.lat,\r\n            lon: this.startPoint.lng\r\n          },\r\n          endPoint: {\r\n            lat: this.endPoint.lat,\r\n            lon: this.endPoint.lng\r\n          }\r\n        });\r\n\r\n        if (this.pathLayer) {\r\n          this.map.removeLayer(this.pathLayer);\r\n        }\r\n\r\n        const path = response.data.path;\r\n        const coordinates = path.map(nodeId => {\r\n          const node = this.nodes[nodeId];\r\n          return [node.lat, node.lon];\r\n        });\r\n\r\n        this.pathLayer = L.polyline(coordinates, {color: 'blue'}).addTo(this.map);\r\n        this.map.fitBounds(this.pathLayer.getBounds());\r\n      } catch (error) {\r\n        console.error('Error finding shortest path:', error);\r\n        alert('查找最短路径时发生错误，请查看控制台了解详情。');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.map-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100vh;\r\n}\r\n\r\n.map {\r\n  flex: 1;\r\n}\r\n\r\n.controls {\r\n  padding: 10px;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.coordinate-info {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n}\r\n\r\n.custom-marker {\r\n  background: none;\r\n  border: none;\r\n}\r\n\r\n.marker-start {\r\n  background-color: #4CAF50;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\n.marker-end {\r\n  background-color: #f44336;\r\n  color: white;\r\n  padding: 4px 8px;\r\n  border-radius: 4px;\r\n  font-size: 12px;\r\n}\r\n\r\nbutton {\r\n  margin: 5px;\r\n  padding: 8px 16px;\r\n  background-color: #2196F3;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #1976D2;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAU;;EAFzBC,GAAA;EAI6BD,KAAK,EAAC;;;EAJnCC,GAAA;EAO2BD,KAAK,EAAC;;;EAMxBA,KAAK,EAAC,KAAK;EAACE,GAAG,EAAC;;;uBAZvBC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAUM,OAVNC,UAUM,GATJC,mBAAA,eAAkB,EACPC,KAAA,CAAAC,UAAU,I,cAArBN,mBAAA,CAEM,OAFNO,UAEM,EAFyC,OACzC,GAAAC,gBAAA,CAAGC,QAAA,CAAAC,gBAAgB,CAACL,KAAA,CAAAC,UAAU,qBAL1CF,mBAAA,gBAOiBC,KAAA,CAAAM,QAAQ,I,cAAnBX,mBAAA,CAEM,OAFNY,UAEM,EAFuC,OACvC,GAAAJ,gBAAA,CAAGC,QAAA,CAAAC,gBAAgB,CAACL,KAAA,CAAAM,QAAQ,qBARxCP,mBAAA,gBAUoBC,KAAA,CAAAC,UAAU,IAAID,KAAA,CAAAM,QAAQ,I,cAApCX,mBAAA,CAA+E;IAVrFF,GAAA;IAU6Ce,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,QAAA,CAAAO,gBAAA,IAAAP,QAAA,CAAAO,gBAAA,IAAAD,IAAA,CAAgB;KAAE,QAAM,KAV5EX,mBAAA,gBAWMF,mBAAA,CAA2C;IAAlCW,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,QAAA,CAAAQ,WAAA,IAAAR,QAAA,CAAAQ,WAAA,IAAAF,IAAA,CAAW;KAAE,OAAK,E,GAEpCb,mBAAA,CAAiC,OAAjCgB,UAAiC,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}