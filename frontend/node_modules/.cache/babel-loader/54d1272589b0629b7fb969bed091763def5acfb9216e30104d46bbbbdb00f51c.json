{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"map-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 添加搜索框容器 \"), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    modelValue: $data.startPoint,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.startPoint = $event),\n    placeholder: \"请输入起点\",\n    class: \"input-with-margin\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_input, {\n    modelValue: $data.endPoint,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.endPoint = $event),\n    placeholder: \"请输入终点\",\n    class: \"input-with-margin\"\n  }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_el_button, {\n    type: \"primary\",\n    onClick: $options.searchRoute\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"查找路线\")])),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])]), _createCommentVNode(\" 地图容器 \"), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    id: \"map\",\n    class: \"map-view\"\n  }, null, -1 /* HOISTED */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","_createVNode","_component_el_input","modelValue","$data","startPoint","_cache","$event","placeholder","endPoint","_component_el_button","type","onClick","$options","searchRoute","default","_withCtx","_createTextVNode","_","id"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapview.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <!-- 添加搜索框容器 -->\r\n    <div class=\"search-container\">\r\n      <el-input\r\n          v-model=\"startPoint\"\r\n          placeholder=\"请输入起点\"\r\n          class=\"input-with-margin\"\r\n      ></el-input>\r\n      <el-input\r\n          v-model=\"endPoint\"\r\n          placeholder=\"请输入终点\"\r\n          class=\"input-with-margin\"\r\n      ></el-input>\r\n      <el-button type=\"primary\" @click=\"searchRoute\">查找路线</el-button>\r\n    </div>\r\n\r\n    <!-- 地图容器 -->\r\n    <div id=\"map\" class=\"map-view\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { ElMessage } from 'element-plus';\r\n\r\nexport default {\r\n  name: 'OsmMap',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      startPoint: '',\r\n      endPoint: '',\r\n      startMarker: null,\r\n      endMarker: null,\r\n      routePath: null,\r\n      // 这里添加一些测试用的节点ID映射，实际应该从后端获取\r\n      nodeMapping: {\r\n        '松江大学城': 2845789961,\r\n        '松江南站': 946031310,\r\n        // 可以添加更多映射\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const options = {\r\n        center: [31.500000, 121.750000],\r\n        minZoom: 0,\r\n        maxZoom: 18,\r\n        zoom: 10,\r\n        zoomControl: true,\r\n        doubleClickZoom: true,\r\n        dragging: true,\r\n        boxZoom: true,\r\n        scrollWheelZoom: true,\r\n        zoomSnap: 0.5,\r\n        fullscreenControl: true,\r\n      };\r\n      this.map = L.map('map', options);\r\n\r\n      // 添加底图\r\n      L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n        attribution: 'Map data © <a href=\"https://www.openstreetmap.org\">OpenStreetMap</a> contributors',\r\n      }).addTo(this.map);\r\n    },\r\n\r\n    // 清除之前的标记和路径\r\n    clearMap() {\r\n      if (this.startMarker) this.map.removeLayer(this.startMarker);\r\n      if (this.endMarker) this.map.removeLayer(this.endMarker);\r\n      if (this.routePath) this.map.removeLayer(this.routePath);\r\n    },\r\n\r\n    // 搜索路线\r\n    async searchRoute() {\r\n      try {\r\n        // 验证输入\r\n        if (!this.startPoint || !this.endPoint) {\r\n          ElMessage.warning('请输入起点和终点');\r\n          return;\r\n        }\r\n\r\n        // 获取节点ID\r\n        const startId = this.nodeMapping[this.startPoint];\r\n        const endId = this.nodeMapping[this.endPoint];\r\n\r\n        if (!startId || !endId) {\r\n          ElMessage.warning('找不到对应的地点，请检查输入');\r\n          return;\r\n        }\r\n\r\n        // 清除之前的标记\r\n        this.clearMap();\r\n\r\n        // 发送请求到后端\r\n        const response = await fetch('http://localhost:18080/route', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            start_id: startId,\r\n            end_id: endId\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('路径查找失败');\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        // 绘制路径\r\n        if (data.path && data.path.length > 0) {\r\n          // 添加起点和终点标记\r\n          this.startMarker = L.marker(data.path[0]).addTo(this.map);\r\n          this.endMarker = L.marker(data.path[data.path.length - 1]).addTo(this.map);\r\n\r\n          // 绘制路径线\r\n          this.routePath = L.polyline(data.path, {\r\n            color: 'blue',\r\n            weight: 3,\r\n            opacity: 0.7\r\n          }).addTo(this.map);\r\n\r\n          // 调整地图视野以显示完整路径\r\n          this.map.fitBounds(this.routePath.getBounds(), {\r\n            padding: [50, 50]\r\n          });\r\n\r\n          ElMessage.success('路径已显示');\r\n        } else {\r\n          ElMessage.warning('未找到可行路径');\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        ElMessage.error('查找路径时出错，请重试');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.map-container {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n}\r\n\r\n.map-view {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.search-container {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.input-with-margin {\r\n  width: 200px;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;EAEnBA,KAAK,EAAC;AAAkB;;;;uBAF/BC,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJC,mBAAA,aAAgB,EAChBC,mBAAA,CAYM,OAZNC,UAYM,GAXJC,YAAA,CAIYC,mBAAA;IARlBC,UAAA,EAKmBC,KAAA,CAAAC,UAAU;IAL7B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKmBH,KAAA,CAAAC,UAAU,GAAAE,MAAA;IACnBC,WAAW,EAAC,OAAO;IACnBb,KAAK,EAAC;2CAEVM,YAAA,CAIYC,mBAAA;IAblBC,UAAA,EAUmBC,KAAA,CAAAK,QAAQ;IAV3B,uBAAAH,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUmBH,KAAA,CAAAK,QAAQ,GAAAF,MAAA;IACjBC,WAAW,EAAC,OAAO;IACnBb,KAAK,EAAC;2CAEVM,YAAA,CAA+DS,oBAAA;IAApDC,IAAI,EAAC,SAAS;IAAEC,OAAK,EAAEC,QAAA,CAAAC;;IAdxCC,OAAA,EAAAC,QAAA,CAcqD,MAAIV,MAAA,QAAAA,MAAA,OAdzDW,gBAAA,CAcqD,MAAI,E;IAdzDC,CAAA;oCAiBIpB,mBAAA,UAAa,E,0BACbC,mBAAA,CAAqC;IAAhCoB,EAAE,EAAC,KAAK;IAACxB,KAAK,EAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}