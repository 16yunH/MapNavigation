{"ast":null,"code":"import \"core-js/modules/esnext.iterator.map.js\";\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { ElMessage } from 'element-plus';\nimport 'element-plus/dist/index.css';\nexport default {\n  name: 'MapView',\n  data() {\n    return {\n      map: null,\n      startPoint: '',\n      // 起点搜索文本\n      endPoint: '',\n      // 终点搜索文本\n      startMarker: null,\n      // 起点标记\n      endMarker: null,\n      // 终点标记\n      routePath: null,\n      // 路径线\n      tileLayer: null,\n      // 底图图层\n      selectedStartId: null,\n      // 选中的起点ID\n      selectedEndId: null,\n      // 选中的终点ID\n      loading: false,\n      // 加载状态\n      searchTimeout: null,\n      // 搜索延时器\n      bounds: {\n        // 地图边界\n        minLat: 28.2817100,\n        minLon: 117.1911600,\n        maxLat: 28.3225200,\n        maxLon: 117.2551900\n      }\n    };\n  },\n  mounted() {\n    this.initMap();\n  },\n  methods: {\n    // 初始化地图\n    initMap() {\n      const centerLat = (this.bounds.minLat + this.bounds.maxLat) / 2;\n      const centerLon = (this.bounds.minLon + this.bounds.maxLon) / 2;\n      this.map = L.map('map', {\n        center: [centerLat, centerLon],\n        zoom: 15,\n        minZoom: 14,\n        maxZoom: 18,\n        zoomControl: true,\n        doubleClickZoom: true,\n        scrollWheelZoom: true\n      });\n\n      // 添加 OSM 底图\n      this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        attribution: '© OpenStreetMap contributors',\n        maxZoom: 18,\n        tileSize: 256\n      }).addTo(this.map);\n\n      // 设置地图边界\n      const bounds = L.latLngBounds([this.bounds.minLat, this.bounds.minLon], [this.bounds.maxLat, this.bounds.maxLon]);\n      this.map.setMaxBounds(bounds);\n\n      // 添加比例尺\n      L.control.scale({\n        imperial: false\n      }).addTo(this.map);\n    },\n    // 处理地点搜索的方法\n    async querySearchAsync(queryString, callback) {\n      // 如果搜索字符串为空，不执行搜索\n      if (!queryString) {\n        callback([]);\n        return;\n      }\n\n      // 使用节流控制搜索频率\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(async () => {\n        try {\n          const response = await fetch('http://localhost:18080/search', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              query: queryString\n            })\n          });\n          if (!response.ok) {\n            throw new Error('搜索请求失败');\n          }\n          const data = await response.json();\n          callback(data);\n        } catch (error) {\n          console.error('搜索错误:', error);\n          ElMessage.error('地点搜索失败');\n          callback([]);\n        }\n      }, 300); // 300ms 的节流延迟\n    },\n    // 处理起点选择\n    handleStartSelect(item) {\n      this.selectedStartId = item.nodeId;\n      // 清除旧的起点标记\n      if (this.startMarker) {\n        this.map.removeLayer(this.startMarker);\n      }\n      // 添加新的起点标记\n      this.startMarker = L.marker([item.lat, item.lon]).addTo(this.map).bindPopup(`起点：${item.name}`).openPopup();\n\n      // 平滑移动到选中位置\n      this.map.flyTo([item.lat, item.lon], 16);\n    },\n    // 处理终点选择\n    handleEndSelect(item) {\n      this.selectedEndId = item.nodeId;\n      if (this.endMarker) {\n        this.map.removeLayer(this.endMarker);\n      }\n      this.endMarker = L.marker([item.lat, item.lon]).addTo(this.map).bindPopup(`终点：${item.name}`).openPopup();\n      this.map.flyTo([item.lat, item.lon], 16);\n    },\n    // 搜索路径\n    async searchRoute() {\n      if (!this.selectedStartId || !this.selectedEndId) {\n        ElMessage.warning('请从搜索结果中选择起点和终点');\n        return;\n      }\n      this.loading = true;\n      try {\n        const response = await fetch('http://localhost:18080/route', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            start_id: this.selectedStartId,\n            end_id: this.selectedEndId\n          })\n        });\n        if (!response.ok) {\n          throw new Error('路径查找失败');\n        }\n        const data = await response.json();\n\n        // 清除现有路径\n        this.clearMap();\n        if (data.path && data.path.length > 0) {\n          // 绘制新路径\n          this.routePath = L.polyline(data.path, {\n            color: '#3388ff',\n            weight: 6,\n            opacity: 0.8,\n            lineJoin: 'round'\n          }).addTo(this.map);\n\n          // 重新添加起终点标记\n          this.startMarker = L.marker(data.path[0]).addTo(this.map).bindPopup('起点').openPopup();\n          this.endMarker = L.marker(data.path[data.path.length - 1]).addTo(this.map).bindPopup('终点');\n\n          // 调整视野以显示完整路径\n          this.map.fitBounds(this.routePath.getBounds(), {\n            padding: [50, 50]\n          });\n          ElMessage.success('路径已显示');\n        } else {\n          ElMessage.warning('未找到可行路径');\n        }\n      } catch (error) {\n        console.error('Error:', error);\n        ElMessage.error('路径查找失败，请重试');\n      } finally {\n        this.loading = false;\n      }\n    },\n    // 清除地图上的标记和路径\n    clearMap() {\n      if (this.startMarker) this.map.removeLayer(this.startMarker);\n      if (this.endMarker) this.map.removeLayer(this.endMarker);\n      if (this.routePath) this.map.removeLayer(this.routePath);\n    }\n  }\n};","map":{"version":3,"names":["L","ElMessage","name","data","map","startPoint","endPoint","startMarker","endMarker","routePath","tileLayer","selectedStartId","selectedEndId","loading","searchTimeout","bounds","minLat","minLon","maxLat","maxLon","mounted","initMap","methods","centerLat","centerLon","center","zoom","minZoom","maxZoom","zoomControl","doubleClickZoom","scrollWheelZoom","attribution","tileSize","addTo","latLngBounds","setMaxBounds","control","scale","imperial","querySearchAsync","queryString","callback","clearTimeout","setTimeout","response","fetch","method","headers","body","JSON","stringify","query","ok","Error","json","error","console","handleStartSelect","item","nodeId","removeLayer","marker","lat","lon","bindPopup","openPopup","flyTo","handleEndSelect","searchRoute","warning","start_id","end_id","clearMap","path","length","polyline","color","weight","opacity","lineJoin","fitBounds","getBounds","padding","success"],"sources":["D:\\3.code\\CLionProjects\\mapnavigation\\frontend\\src\\components\\mapview.vue"],"sourcesContent":["<template>\r\n  <div class=\"map-container\">\r\n    <!-- 搜索控件容器 -->\r\n    <div class=\"search-container\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"9\">\r\n          <!-- 起点搜索框，使用自动完成组件 -->\r\n          <el-autocomplete\r\n              v-model=\"startPoint\"\r\n              :fetch-suggestions=\"querySearchAsync\"\r\n              placeholder=\"请输入起点\"\r\n              clearable\r\n              class=\"full-width\"\r\n              :trigger-on-focus=\"false\"\r\n              @select=\"handleStartSelect\"\r\n          >\r\n            <template #default=\"{ item }\">\r\n              <div class=\"suggestion-item\">\r\n                <div class=\"name\">{{ item.name }}</div>\r\n                <div class=\"id\">ID: {{ item.nodeId }}</div>\r\n              </div>\r\n            </template>\r\n          </el-autocomplete>\r\n        </el-col>\r\n        <el-col :span=\"9\">\r\n          <!-- 终点搜索框，使用自动完成组件 -->\r\n          <el-autocomplete\r\n              v-model=\"endPoint\"\r\n              :fetch-suggestions=\"querySearchAsync\"\r\n              placeholder=\"请输入终点\"\r\n              clearable\r\n              class=\"full-width\"\r\n              :trigger-on-focus=\"false\"\r\n              @select=\"handleEndSelect\"\r\n          >\r\n            <template #default=\"{ item }\">\r\n              <div class=\"suggestion-item\">\r\n                <div class=\"name\">{{ item.name }}</div>\r\n                <div class=\"id\">ID: {{ item.nodeId }}</div>\r\n              </div>\r\n            </template>\r\n          </el-autocomplete>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <el-button type=\"primary\" @click=\"searchRoute\" :loading=\"loading\">\r\n            查找路线\r\n          </el-button>\r\n        </el-col>\r\n      </el-row>\r\n    </div>\r\n\r\n    <!-- 地图容器 -->\r\n    <div id=\"map\" class=\"map-view\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport { ElMessage } from 'element-plus';\r\nimport 'element-plus/dist/index.css';\r\n\r\nexport default {\r\n  name: 'MapView',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      startPoint: '',              // 起点搜索文本\r\n      endPoint: '',                // 终点搜索文本\r\n      startMarker: null,           // 起点标记\r\n      endMarker: null,            // 终点标记\r\n      routePath: null,            // 路径线\r\n      tileLayer: null,            // 底图图层\r\n      selectedStartId: null,       // 选中的起点ID\r\n      selectedEndId: null,         // 选中的终点ID\r\n      loading: false,              // 加载状态\r\n      searchTimeout: null,         // 搜索延时器\r\n      bounds: {                    // 地图边界\r\n        minLat: 28.2817100,\r\n        minLon: 117.1911600,\r\n        maxLat: 28.3225200,\r\n        maxLon: 117.2551900\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n  },\r\n  methods: {\r\n    // 初始化地图\r\n    initMap() {\r\n      const centerLat = (this.bounds.minLat + this.bounds.maxLat) / 2;\r\n      const centerLon = (this.bounds.minLon + this.bounds.maxLon) / 2;\r\n\r\n      this.map = L.map('map', {\r\n        center: [centerLat, centerLon],\r\n        zoom: 15,\r\n        minZoom: 14,\r\n        maxZoom: 18,\r\n        zoomControl: true,\r\n        doubleClickZoom: true,\r\n        scrollWheelZoom: true\r\n      });\r\n\r\n      // 添加 OSM 底图\r\n      this.tileLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '© OpenStreetMap contributors',\r\n        maxZoom: 18,\r\n        tileSize: 256\r\n      }).addTo(this.map);\r\n\r\n      // 设置地图边界\r\n      const bounds = L.latLngBounds(\r\n          [this.bounds.minLat, this.bounds.minLon],\r\n          [this.bounds.maxLat, this.bounds.maxLon]\r\n      );\r\n      this.map.setMaxBounds(bounds);\r\n\r\n      // 添加比例尺\r\n      L.control.scale({ imperial: false }).addTo(this.map);\r\n    },\r\n\r\n    // 处理地点搜索的方法\r\n    async querySearchAsync(queryString, callback) {\r\n      // 如果搜索字符串为空，不执行搜索\r\n      if (!queryString) {\r\n        callback([]);\r\n        return;\r\n      }\r\n\r\n      // 使用节流控制搜索频率\r\n      if (this.searchTimeout) {\r\n        clearTimeout(this.searchTimeout);\r\n      }\r\n\r\n      this.searchTimeout = setTimeout(async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:18080/search', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              query: queryString\r\n            })\r\n          });\r\n\r\n          if (!response.ok) {\r\n            throw new Error('搜索请求失败');\r\n          }\r\n\r\n          const data = await response.json();\r\n          callback(data);\r\n        } catch (error) {\r\n          console.error('搜索错误:', error);\r\n          ElMessage.error('地点搜索失败');\r\n          callback([]);\r\n        }\r\n      }, 300); // 300ms 的节流延迟\r\n    },\r\n\r\n    // 处理起点选择\r\n    handleStartSelect(item) {\r\n      this.selectedStartId = item.nodeId;\r\n      // 清除旧的起点标记\r\n      if (this.startMarker) {\r\n        this.map.removeLayer(this.startMarker);\r\n      }\r\n      // 添加新的起点标记\r\n      this.startMarker = L.marker([item.lat, item.lon])\r\n          .addTo(this.map)\r\n          .bindPopup(`起点：${item.name}`)\r\n          .openPopup();\r\n\r\n      // 平滑移动到选中位置\r\n      this.map.flyTo([item.lat, item.lon], 16);\r\n    },\r\n\r\n    // 处理终点选择\r\n    handleEndSelect(item) {\r\n      this.selectedEndId = item.nodeId;\r\n      if (this.endMarker) {\r\n        this.map.removeLayer(this.endMarker);\r\n      }\r\n      this.endMarker = L.marker([item.lat, item.lon])\r\n          .addTo(this.map)\r\n          .bindPopup(`终点：${item.name}`)\r\n          .openPopup();\r\n\r\n      this.map.flyTo([item.lat, item.lon], 16);\r\n    },\r\n\r\n    // 搜索路径\r\n    async searchRoute() {\r\n      if (!this.selectedStartId || !this.selectedEndId) {\r\n        ElMessage.warning('请从搜索结果中选择起点和终点');\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      try {\r\n        const response = await fetch('http://localhost:18080/route', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            start_id: this.selectedStartId,\r\n            end_id: this.selectedEndId\r\n          })\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('路径查找失败');\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        // 清除现有路径\r\n        this.clearMap();\r\n\r\n        if (data.path && data.path.length > 0) {\r\n          // 绘制新路径\r\n          this.routePath = L.polyline(data.path, {\r\n            color: '#3388ff',\r\n            weight: 6,\r\n            opacity: 0.8,\r\n            lineJoin: 'round'\r\n          }).addTo(this.map);\r\n\r\n          // 重新添加起终点标记\r\n          this.startMarker = L.marker(data.path[0]).addTo(this.map)\r\n              .bindPopup('起点').openPopup();\r\n          this.endMarker = L.marker(data.path[data.path.length - 1]).addTo(this.map)\r\n              .bindPopup('终点');\r\n\r\n          // 调整视野以显示完整路径\r\n          this.map.fitBounds(this.routePath.getBounds(), {\r\n            padding: [50, 50]\r\n          });\r\n\r\n          ElMessage.success('路径已显示');\r\n        } else {\r\n          ElMessage.warning('未找到可行路径');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        ElMessage.error('路径查找失败，请重试');\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n\r\n    // 清除地图上的标记和路径\r\n    clearMap() {\r\n      if (this.startMarker) this.map.removeLayer(this.startMarker);\r\n      if (this.endMarker) this.map.removeLayer(this.endMarker);\r\n      if (this.routePath) this.map.removeLayer(this.routePath);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.map-container {\r\n  position: relative;\r\n  height: 100vh;\r\n  width: 100%;\r\n}\r\n\r\n.map-view {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.search-container {\r\n  position: absolute;\r\n  top: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  z-index: 1000;\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n  width: 80%;\r\n  max-width: 800px;\r\n}\r\n\r\n.full-width {\r\n  width: 100%;\r\n}\r\n\r\n.suggestion-item {\r\n  padding: 8px 0;\r\n}\r\n\r\n.suggestion-item .name {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n}\r\n\r\n.suggestion-item .id {\r\n  font-size: 12px;\r\n  color: #999;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .search-container {\r\n    width: 90%;\r\n    padding: 15px;\r\n  }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}